{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/addbooks/addbooks.component.css","webpack:///./src/app/addbooks/addbooks.component.html","webpack:///./src/app/addbooks/addbooks.component.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/bookdetails/bookdetails.component.css","webpack:///./src/app/bookdetails/bookdetails.component.html","webpack:///./src/app/bookdetails/bookdetails.component.ts","webpack:///./src/app/bookservice.service.ts","webpack:///./src/app/footer/footer.component.css","webpack:///./src/app/footer/footer.component.html","webpack:///./src/app/footer/footer.component.ts","webpack:///./src/app/header/header.component.css","webpack:///./src/app/header/header.component.html","webpack:///./src/app/header/header.component.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/listings/listings.component.css","webpack:///./src/app/listings/listings.component.html","webpack:///./src/app/listings/listings.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/message.service.ts","webpack:///./src/app/messages/messages.component.css","webpack:///./src/app/messages/messages.component.html","webpack:///./src/app/messages/messages.component.ts","webpack:///./src/app/signup/signup.component.css","webpack:///./src/app/signup/signup.component.html","webpack:///./src/app/signup/signup.component.ts","webpack:///./src/app/userservice.service.ts","webpack:///./src/app/wishlist.service.ts","webpack:///./src/app/wishlist/wishlist.component.css","webpack:///./src/app/wishlist/wishlist.component.html","webpack:///./src/app/wishlist/wishlist.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"#myrow{\\r\\n    margin-top:3%;\\r\\n}\\r\\n#myform{\\r\\n    width:100%\\r\\n}\\r\\n#header{\\r\\nmargin-bottom:1%;\\r\\n}\\r\\n#bottom{\\r\\n    margin-bottom: 1%;\\r\\n}\\r\\n#content{\\r\\n    padding-bottom: 5px;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"row\\\" id=\\\"myrow\\\"></div>\\n    <div class=\\\"row\\\" id=\\\"myform\\\">\\n\\t<div class=\\\"col \\\"></div>\\n    <div class=\\\"col-5 border border-dark rounded\\\" id=\\\"content\\\">\\n        <div class=\\\"row bg-dark text-white\\\" id=\\\"header\\\">\\n\\t\\t<div class=\\\"col text-center\\\"><h2>ADD BOOK</h2></div>\\n\\t\\t</div>\\n    <form (ngSubmit)=\\\"onSubmit()\\\" #LoginForm=\\\"ngForm\\\">\\n                    <div class=\\\"form-group row\\\">\\n                        <label class=\\\"col-sm-3 col-form-label\\\" for=\\\"bookname\\\">BOOKNAME:</label>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-9\\\">\\n                        <input required class=\\\"form-control\\\" type=\\\"text\\\"  id=\\\"bookname\\\" [(ngModel)]=\\\"newbook.name\\\" name=\\\"bookname\\\" >\\n\\t\\t\\t\\t\\t\\t</div>\\n                    </div>\\n                    <div class=\\\"form-group row\\\">\\n                        <label class=\\\"col-sm-3 col-form-label\\\" for=\\\"author\\\">AUTHOR:</label>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-9\\\">\\n                        <input required class=\\\"form-control\\\" name=\\\"author\\\" type=\\\"text\\\" id=\\\"author\\\" [(ngModel)]=\\\"newbook.author\\\">\\n\\t\\t\\t\\t\\t\\t</div>\\n                    </div>\\n\\n                    <div class=\\\"form-group row\\\">\\n                      <label class=\\\"col-sm-3 col-form-label\\\" for=\\\"price\\\">PRICE:</label>\\n          <div class=\\\"col-sm-9\\\">\\n                      <input class=\\\"form-control\\\" required name=\\\"price\\\" type=\\\"number\\\" step='0.01' id=\\\"price\\\" [(ngModel)]=\\\"newbook.price\\\">\\n          </div>\\n                  </div>\\n                  <div class=\\\"form-group row\\\">\\n                    <label class=\\\"col-sm-3 col-form-label\\\" for=\\\"condition\\\">CONDITION:</label>\\n        <div class=\\\"col-sm-9\\\">\\n            <select class=\\\"custom-select\\\" name=\\\"condition\\\" id=\\\"condition\\\" [(ngModel)]=\\\"newbook.condition\\\">\\n                <option selected>Choose Condition</option>\\n                <option value=\\\"New\\\">New</option>\\n                <option value=\\\"Almost New\\\">Almost New</option>\\n                <option value=\\\"Slight Damaged\\\">Slight Damaged</option>\\n                <option value=\\\"Worn\\\">Worn</option>\\n              </select>\\n        </div>\\n                </div>\\n            <div class=\\\"row\\\">\\n            <div class=\\\"col text-center\\\">\\n            <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" [disabled]=\\\"!LoginForm.form.valid\\\">Submit</button>\\n            </div>\\n            </div>\\n        </form>\\n\\t\\t</div>\\n         <div class=\\\"col\\\"></div>\\n    </div>\"","import { Component, OnInit } from '@angular/core';\nimport {BookserviceService} from '../bookservice.service'\nimport {UserserviceService} from '../userservice.service'\nimport { books } from '../book'\nimport {Router, ActivatedRoute} from '@angular/router';\n@Component({\n  selector: 'app-addbooks',\n  templateUrl: './addbooks.component.html',\n  styleUrls: ['./addbooks.component.css']\n})\nexport class AddbooksComponent implements OnInit {\n  newbook:books={\n    sellerId:null,\n    name:'',\n    author:'',\n    price:null,\n    condition:''\n  };\n  constructor(private route: Router,private bookservice: BookserviceService,private userservice:UserserviceService) { }\n\n  ngOnInit() {\n  }\nonSubmit()\n{\n  if(this.userservice.getActiveUser()){\n this.newbook.sellerId=this.userservice.getActiveUser().id\n  this.bookservice.addbook(this.newbook);\n  alert('Book Added');\n  this.route.navigate(['listings']);\n  }\n  else\n  {\n    alert(\"Please Login\")\n    this.route.navigate(['login']);\n  }\n}\n}\n","module.exports = \"\"","module.exports = \"<app-header></app-header>\\n<router-outlet></router-outlet>\\n<app-footer></app-footer>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport {RouterModule, Routes} from '@angular/router';\n\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './header/header.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { LoginComponent } from './login/login.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { UserserviceService } from './userservice.service';\nimport { ListingsComponent } from './listings/listings.component';\nimport { AddbooksComponent } from './addbooks/addbooks.component';\nimport { WishlistComponent } from './wishlist/wishlist.component';\nimport { MessagesComponent } from './messages/messages.component';\nimport { BookdetailsComponent } from './bookdetails/bookdetails.component';\nimport { BookserviceService } from './bookservice.service';\nimport { WishlistService } from './wishlist.service';\nimport { MessageService } from './message.service';\nimport { HomeComponent } from './home/home.component';\n\nconst routes: Routes = [\n  { path: '',redirectTo: 'home',pathMatch: 'full'},\n  { path: 'home',component: HomeComponent},\n  { path: 'signup',component: SignupComponent},\n  { path: 'login',component: LoginComponent},\n  { path: 'listings',component: ListingsComponent},\n  { path: 'listings/add',component: AddbooksComponent},\n  { path: 'wishlist',component: WishlistComponent},\n  { path: 'message', component: MessagesComponent},\n  { path: 'listings/:id', component: BookdetailsComponent}\n];\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    FooterComponent,\n    LoginComponent,\n    SignupComponent,\n    ListingsComponent,\n    AddbooksComponent,\n    WishlistComponent,\n    MessagesComponent,\n    BookdetailsComponent,\n    HomeComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    RouterModule.forRoot(routes)\n  ],\n  providers: [UserserviceService,BookserviceService,WishlistService,MessageService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \".card{\\r\\n    margin:30px\\r\\n}\"","module.exports = \"<div class=\\\"card\\\">\\n  <h5 class=\\\"card-header\\\">Book Details</h5>\\n  <div class=\\\"card-body\\\">\\n    <h5 class=\\\"card-title\\\">About Book</h5>\\n    <ul type=\\\"none\\\">\\n      <li>BOOK NAME : {{selectedbook.name}}</li>\\n      <li>BOOK AUTHOR : {{selectedbook.author}}</li>\\n      <li>BOOK PRICE : {{selectedbook.price}}</li>\\n      <li>BOOK CONDITION : {{selectedbook.condition}}</li>\\n    </ul>\\n    <button class=\\\"btn btn-primary\\\" (click)=\\\"addwishlist(selectedbook.id)\\\">ADD TO WISHLIST</button>\\n  </div>\\n</div>\\n<div class=\\\"card\\\">\\n  <h5 class=\\\"card-header\\\">Seller Details</h5>\\n  <div class=\\\"card-body\\\">\\n    <h5 class=\\\"card-title\\\">About Seller</h5>\\n    <ul type=\\\"none\\\">\\n      <li>NAME : {{sellerdetails.name}}</li>\\n      <li>EMAIL : {{sellerdetails.email}}</li>\\n      <li>COLLEGE : {{sellerdetails.college}}</li>\\n      <li>ADDRESS : {{sellerdetails.address}}</li>\\n      <li>MOBILE : {{sellerdetails.mobile}}</li>\\n    </ul>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"comment\\\">Contact Seller:</label>\\n      <textarea [(ngModel)]='text' class=\\\"form-control\\\" rows=\\\"5\\\" placeholder=\\\"Send a message to the seller\\\"></textarea>\\n    </div>\\n    <button class=\\\"btn btn-primary\\\" (click)=\\\"sendmessage()\\\">SEND</button>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {Router,ActivatedRoute, ParamMap} from \"@angular/router\";\nimport {UserserviceService} from '../userservice.service';\nimport {BookserviceService} from '../bookservice.service';\nimport { WishlistService } from '../wishlist.service';\nimport { MessageService } from '../message.service';\nimport { books } from '../book'\nimport { users } from '../user'\n\n@Component({\n  selector: 'app-bookdetails',\n  templateUrl: './bookdetails.component.html',\n  styleUrls: ['./bookdetails.component.css']\n})\nexport class BookdetailsComponent implements OnInit {\n\n  bookid:number;\n  selectedbook:books={\n    sellerId:null,\n    name:'',\n    author:'',\n    price:null,\n    condition:''\n  };\n  sellerdetails:users={\n    name:'',\n    email:'',\n    password:'',\n    college:'',\n    address:'',\n    mobile:null\n  };\ntext='';\n  constructor(private route: Router,\n    private wishlist: WishlistService,\n    private router: ActivatedRoute,\n    private bookservice: BookserviceService,\n    private userservice: UserserviceService,\n    private message:MessageService) { }\n\n  ngOnInit() {\n    this.router.paramMap.subscribe( (params: ParamMap) =>{\n      this.bookid = +(params.get('id'));\n      this.bookservice.getfilteredbook({id:this.bookid}).subscribe((data:books[]) => {\n        this.selectedbook=data[0];\n        this.userservice.getuser({id:this.selectedbook.sellerId}).subscribe((data2:users) => {\n          this.sellerdetails=data2;\n        });\n      });\n    });\n  }\n\n  addwishlist(id)\n  {  if(this.userservice.getActiveUser()){\n     this.wishlist.addtowishlist({userid:this.userservice.getActiveUser().id,\n    bookid:id})\n     }\n     else\n     {\n       alert(\"Please Login to Continue\")\n       this.route.navigate(['login']);\n     }\n  }\n\n  sendmessage()\n  { if(this.userservice.getActiveUser()){\n    this.message.addmessage({message:this.text,reciever:this.sellerdetails.id,book:this.selectedbook.id,sender:this.userservice.getActiveUser().id})\n  }\n  else\n  {\n    alert(\"Please Login to Continue\")\n    this.route.navigate(['login']);\n  }\n\n}\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { books } from './book'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BookserviceService {\n\n  constructor(private http:HttpClient) { }\n  \n  addbook(value)\n  {\n    this.http.post('/api/books', value).subscribe((data:books) => {\n    });\n  }\n\n  getbooks():Observable<books[]>{\n    return this.http.get<books[]>('/api/books')\n  }\n\n  getfilteredbook(value):Observable<books[]>\n  {\n    return this.http.post<books[]>('/api/books/filter', value);\n  }\n\n  getpricefilteredbook(value)\n  {\n    return this.http.post<books[]>('/api/books/pricefilter', value);\n  }\n}\n","module.exports = \".bg-4 { \\r\\n    width:100%;\\r\\n    bottom:0;\\r\\n    position: fixed;\\r\\n}\"","module.exports = \"<footer class=\\\"container-fluid bg-4 text-center bg-dark text-white\\\">\\n  <p>Made By Pratyush</p> \\n</footer>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"#heading{\\r\\n    margin:0;\\r\\n}\"","module.exports = \"<div class=\\\"row bg-dark text-white\\\" id=\\\"heading\\\">\\n  <div class=\\\"col-4\\\"></div>\\n  <h1 class=\\\"col-3\\\">MyBookStore</h1>\\n  <div class=\\\"col-5\\\" *ngIf=\\\"display=='notmember'\\\">    \\n    <button class=\\\"btn btn-dark\\\" (click)=\\\"home1()\\\"><i class=\\\"fas fa-home\\\"></i>HOME</button>\\n    <button class=\\\"btn btn-dark\\\" (click)=\\\"signup()\\\"><i class=\\\"fas fa-user-plus\\\"></i>SIGN UP</button>\\n    <button class=\\\"btn btn-dark\\\" (click)=\\\"login()\\\"><i class=\\\"fas fa-sign-in-alt\\\"></i>LOGIN</button>\\n    </div>\\n    <div class=\\\"col-5\\\" *ngIf=\\\"display=='member'\\\">\\n      <button class=\\\"btn btn-dark\\\" (click)=\\\"home()\\\"><i class=\\\"fas fa-home\\\"></i>HOME</button>\\n    <button class=\\\"btn btn-dark\\\" (click)=\\\"wishlist()\\\"><i class=\\\"fas fa-heart\\\"></i>WISHLIST</button>\\n    <button class=\\\"btn btn-dark\\\" (click)=\\\"messages()\\\"><i class=\\\"fas fa-envelope\\\"></i>MESSAGES</button>\\n    <button class=\\\"btn btn-dark\\\" (click)=\\\"logout()\\\"><i class=\\\"fas fa-sign-out-alt\\\"></i>LOGOUT</button>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport {Router, ActivatedRoute} from '@angular/router';\nimport { UserserviceService } from '../userservice.service'\nimport { Subscription }   from 'rxjs';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n  subscription: Subscription;\n  display=\"notmember\"\n  constructor(private user: UserserviceService,private router: ActivatedRoute,private route: Router)\n  \n  {\n    this.subscription = user.nav$.subscribe(\n      mission => {\n        this.display = mission;\n    });\n  }\n  \n  ngOnInit() {\n  }\n\n\n  login(){\n    this.route.navigate(['login'], { relativeTo: this.router});\n  }\n  signup(){\n    this.route.navigate(['signup'], { relativeTo: this.router});\n  }\n  wishlist(){\n    this.route.navigate(['wishlist'], { relativeTo: this.router});\n  }\n  messages(){\n    this.route.navigate(['message'], { relativeTo: this.router});\n  }\n  home(){\n    this.route.navigate(['listings'], { relativeTo: this.router});\n  }\n  home1(){\n    this.route.navigate(['home'], { relativeTo: this.router});\n  }\n\n  logout(){\n    this.route.navigate(['login'], { relativeTo: this.router});\n    this.display=\"notmember\"\n  }\n}","module.exports = \"#bg{\\r\\n    height:100%;\\r\\n    margin-bottom:30px;\\r\\n    background-image: url(\\\"http://server.myspace-shack.com/d23/7f6663b7-d098-46da-88fa-89614f7c0256.jpg\\\");\\r\\n}\\r\\n\"","module.exports = \"<h1>\\nA PLACE \\n</h1>\\n<h1>\\n    TO\\n</h1>\\n<h1>\\n        EXCHANGE BOOKS \\n</h1>\\n<h4>\\n  start now by signing up\\n</h4>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"#myrow{\\r\\n    width:100%;\\r\\n    height: 100%;\\r\\n\\r\\n}\\r\\n.card{\\r\\n    height:400;\\r\\n    width:18rem;\\r\\n}\\r\\n.card-body\\r\\n{\\r\\n    height:200px;\\r\\n}\\r\\n#content{\\r\\n    padding-bottom: 50px;\\r\\n}\\r\\n.mycard{\\r\\n    margin:20px;\\r\\n    padding:0;\\r\\n}\\r\\n#mybutton{\\r\\n    height:487px;\\r\\n}\\r\\n#filter{\\r\\n    margin:30px;\\r\\n    padding:10px;\\r\\n}\\r\\n#btntexts{\\r\\n    text-align:center;\\r\\n    margin-top:100px;\\r\\n}\"","module.exports = \"<div id=\\\"content\\\">\\n<div class='border border-rounded'id=\\\"filter\\\">\\n    <div class=\\\"input-group mb-3\\\">\\n        <div class=\\\"input-group-prepend\\\">\\n          <label class=\\\"input-group-text\\\" for=\\\"inputGroupSelect01\\\">Filter by</label>\\n        </div>\\n        <select class=\\\"custom-select\\\" [(ngModel)]=\\\"displayfilter\\\">\\n          <option selected>Choose...</option>\\n          <option value=\\\"Title\\\">Title</option>\\n          <option value=\\\"Author\\\">Author</option>\\n          <option value=\\\"Condition\\\">Condition</option>\\n          <option value=\\\"Price\\\">Price</option>\\n        </select>\\n      </div>\\n\\n    <div class=\\\"input-group mb-3\\\" *ngIf=\\\"displayfilter=='Title'\\\">\\n        <input [(ngModel)]=\\\"filter.name\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search By Title\\\" aria-label=\\\"Recipient's username\\\">\\n        <div class=\\\"input-group-append\\\">\\n          <button class=\\\"btn btn-outline-secondary\\\"  (click)=\\\"namefilter()\\\" type=\\\"button\\\">Go</button>\\n        </div>\\n      </div>\\n      <div class=\\\"input-group mb-3\\\" *ngIf=\\\"displayfilter=='Author'\\\">\\n          <input [(ngModel)]=\\\"filter.author\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search By Title\\\">\\n          <div class=\\\"input-group-append\\\">\\n            <button class=\\\"btn btn-outline-secondary\\\" (click)=\\\"authorfilter()\\\" type=\\\"button\\\">Go</button>\\n          </div>\\n        </div>\\n        <div class=\\\"input-group mb-3\\\" *ngIf=\\\"displayfilter=='Price'\\\">\\n          <input [(ngModel)]=\\\"filter.pricemin\\\" type=\\\"number\\\" class=\\\"form-control\\\" placeholder=\\\"Min Price\\\">\\n          <input [(ngModel)]=\\\"filter.pricemax\\\" type=\\\"number\\\" class=\\\"form-control\\\" placeholder=\\\"Max Price\\\">\\n          <div class=\\\"input-group-append\\\">\\n            <button class=\\\"btn btn-outline-secondary\\\" (click)=\\\"pricefilter()\\\" type=\\\"button\\\">Go</button>\\n          </div>\\n        </div>\\n        <div class=\\\"input-group mb-3\\\" *ngIf=\\\"displayfilter=='Condition'\\\">\\n          <select class=\\\"custom-select\\\"  [(ngModel)]=\\\"filter.condition\\\">\\n            <option selected>Choose Condition</option>\\n            <option value=\\\"New\\\">New</option>\\n            <option value=\\\"Almost New\\\">Almost New</option>\\n            <option value=\\\"Slight Damaged\\\">Slight Damaged</option>\\n            <option value=\\\"Worn\\\">Worn</option>\\n          </select>\\n          <div class=\\\"input-group-append\\\">\\n            <button class=\\\"btn btn-outline-secondary\\\" (click)=\\\"conditionfilter()\\\" type=\\\"button\\\">Go</button>\\n          </div>\\n        </div>\\n       \\n<button (click)=\\\"showall()\\\">SHOW ALL</button>\\n</div>\\n<div class=\\\"row\\\" id=\\\"myrow\\\">\\n<div *ngFor=\\\"let data of displaylist\\\" class=\\\"col-3 mycard\\\">\\n<div class=\\\"card\\\">\\n    <img class=\\\"card-img-top\\\" src=\\\"http://server.myspace-shack.com/d23/d9a5f044-331d-49fb-99ec-95fedfe904db.png\\\" alt=\\\"Card image cap\\\">\\n    <div class=\\\"card-body\\\">\\n        <h5 class=\\\"card-title\\\">{{data.name}}</h5>\\n        <h6 class=\\\"card-subtitle mb-2 text-muted\\\">{{data.author}}</h6>\\n        <h6 class=\\\"card-subtitle mb-2 text-muted\\\">price:{{data.price}}</h6>\\n        <button class=\\\"btn btn-primary\\\" (click)= \\\"details(data.id)\\\">DETAILS</button>\\n        <button class=\\\"btn btn-primary\\\" (click)= \\\"addwishlist(data.id)\\\">ADD</button>\\n      </div>\\n  </div>\\n</div>\\n<div class=\\\"col-3 mycard\\\">\\n<button class=\\\"card\\\" id=\\\"mybutton\\\" (click)=\\\"add()\\\">\\n  <p id=\\\"btntexts\\\">\\n  <h2>CLICK HERE</h2>\\n   <h2>TO ADD </h2>\\n   <h2>NEW BOOK</h2>\\n</button>\\n</div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport {Router, ActivatedRoute} from '@angular/router';\nimport {UserserviceService} from '../userservice.service';\nimport {BookserviceService} from '../bookservice.service';\nimport { WishlistService } from '../wishlist.service';\nimport { books } from '../book'\n\n\n@Component({\n  selector: 'app-listings',\n  templateUrl: './listings.component.html',\n  styleUrls: ['./listings.component.css']\n})\nexport class ListingsComponent implements OnInit {\ndisplayfilter:string='';\n  filter={\n  name:'',\n  author:'',\n  pricemin:null,\n  pricemax:null,\n  condition:''\n}\n  constructor(private bookservice: BookserviceService,\n    private userservice: UserserviceService,\n    private router: ActivatedRoute,\n    private route: Router,\n    private wishlist: WishlistService) { }\n    \n  displaylist:books[];\n  ngOnInit() {\n    this.bookservice.getbooks().subscribe(res=>{\n      this.displaylist=res;\n    })\n  }\n  add()\n  {\n    if(this.userservice.getActiveUser()){\n    this.route.navigate(['add'], { relativeTo: this.router});\n    }\n    else\n     {\n     alert(\"Please Login to Continue\")\n     this.route.navigate(['login']);\n     }\n  }\n\n  addwishlist(id)\n  {  if(this.userservice.getActiveUser()){\n     this.wishlist.addtowishlist({userid:this.userservice.getActiveUser().id,\n    bookid:id})\n     }\n     else\n     {\n     alert(\"Please Login to Continue\")\n     this.route.navigate(['login']);\n     }\n  }\n  details(id){\n    this.route.navigate([id], { relativeTo: this.router});\n  }\n\n  authorfilter()\n  {\n    this.bookservice.getfilteredbook({author:this.filter.author}).subscribe(res=>{\n      this.displaylist=res;\n    })\n  }\n\n  conditionfilter()\n  {\n    this.bookservice.getfilteredbook({condition:this.filter.condition}).subscribe(res=>{\n      this.displaylist=res;\n    })\n  }\n\n namefilter()\n  {\n    this.bookservice.getfilteredbook({name:this.filter.name}).subscribe(res=>{\n      this.displaylist=res;\n    })\n  }\n\n  showall()\n  {\n    this.bookservice.getbooks().subscribe(res=>{\n      this.displaylist=res;\n    })\n  }\n\n  pricefilter()\n  {\n    this.bookservice.getpricefilteredbook({min:this.filter.pricemin,max:this.filter.pricemax}).subscribe(res=>{\n      this.displaylist=res;\n    })\n  }\n}\n","module.exports = \"#myrow{\\r\\n    margin-top:3%;\\r\\n}\\r\\n\\r\\n#myform{\\r\\n    width:100%\\r\\n}\\r\\n\\r\\n#header{\\r\\nmargin-bottom:1%;\\r\\n}\\r\\n\\r\\n#bottom{\\r\\n    margin-bottom: 1%;\\r\\n}\\r\\n\\r\\n#content{\\r\\n    padding-bottom: 5px;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"row\\\" id=\\\"myrow\\\"></div>\\n    <div class=\\\"row\\\" id=\\\"myform\\\">\\n\\t<div class=\\\"col\\\"></div>\\n    <div class=\\\"col-6 border border-dark rounded\\\" id=\\\"content\\\">\\n        <div class=\\\"row bg-dark text-white\\\" id=\\\"header\\\">\\n\\t\\t<div class=\\\"col \\\"></div>\\n\\t\\t<div class=\\\"col text-center\\\"><h2>LOGIN</h2></div>\\n\\t\\t<div class=\\\"col\\\"></div>\\n        </div>\\n        <form (ngSubmit)=\\\"onSubmit()\\\" #inputform=\\\"ngForm\\\">\\n            <div class=\\\"form-group row\\\">\\n              <label class=\\\"col-sm-3 col-form-label\\\" for=\\\"username\\\">USERNAME:</label>\\n              <div class=\\\"col-sm-9\\\">\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"username\\\"\\n                     required\\n                     [(ngModel)]=\\\"newuser.email\\\" name=\\\"username\\\">\\n                </div>\\n            </div>\\n       \\n            <div class=\\\"form-group row\\\">\\n              <label class=\\\"col-sm-3 col-form-label\\\" for=\\\"password\\\">PASSWORD</label>\\n              <div class=\\\"col-sm-9\\\">\\n              <input required type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"password\\\"\\n                     [(ngModel)]=\\\"newuser.password\\\" name=\\\"password\\\"></div>\\n            </div>\\n            <div class=\\\"row\\\">\\n            <div class=\\\"col text-center\\\">\\n            <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" id=\\\"submit\\\" [disabled]=\\\"!inputform.form.valid\\\">Login</button>\\n            </div>\\n            </div>\\n            </form>\\n\\t\\t</div>\\n         <div class=\\\"col\\\"></div>\\n    </div>\"","import { Component, OnInit} from '@angular/core';\nimport {UserserviceService} from '../userservice.service'\nimport {Router, ActivatedRoute} from '@angular/router';\nimport {users} from '../user'\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  newuser:object={\n    email:'',\n    password:''\n  }\n  \n\n\n  constructor(private userservice: UserserviceService,private router: ActivatedRoute,private route: Router) { }\n\n  ngOnInit() {\n    \n  }\n onSubmit()\n  {\n  this.userservice.getuser(this.newuser).subscribe(prod=>{\n    if(prod){\n      this.route.navigate(['listings']);\n      this.userservice.setActiveUser(prod);\n    }\n    else\n    alert(\"invalid user\")\n  })\n\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessageService {\n\n  constructor(private http:HttpClient) { }\n\n  addmessage(value){\n    this.http.post('/api/messages', value).subscribe((data) => {\n     console.log(data);\n   });\n   }\n\n   getmessage(value)\n   {\n    return this.http.post('/api/messages/getmessages', value)\n   }\n}\n","module.exports = \".card{\\r\\n    margin:30px;\\r\\n}\"","module.exports = \"<div class=\\\"card\\\" *ngFor=\\\"let data of displaymessage\\\">\\n  <div class=\\\"card-header\\\">\\n    From: {{data.Sender.name}}\\n  </div>\\n  <div class=\\\"card-body\\\">\\n    <h5 class=\\\"card-title\\\">{{data.Book.name}}</h5>\\n    <p class=\\\"card-text\\\">{{data.text}}</p>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport {MessageService} from '../message.service';\nimport {UserserviceService} from '../userservice.service';\n\n@Component({\n  selector: 'app-messages',\n  templateUrl: './messages.component.html',\n  styleUrls: ['./messages.component.css']\n})\nexport class MessagesComponent implements OnInit {\n\n  constructor(private userservice: UserserviceService,private message:MessageService) { }\n\n  displaymessage:any;\n  ngOnInit() {\n if(this.userservice.getActiveUser()){\n    this.message.getmessage({id:this.userservice.getActiveUser().id})\n    .subscribe(res=>{\n      console.log(res)\n      this.displaymessage=res;\n    })\n  }\n  else\n  alert(\"Please Login to Continue\")\n  }\n\n}\n","module.exports = \"#myrow{\\r\\n    margin-top:3%;\\r\\n}\\r\\n#myform{\\r\\n    width:100%\\r\\n}\\r\\n#header{\\r\\nmargin-bottom:1%;\\r\\n}\\r\\n#bottom{\\r\\n    margin-bottom: 1%;\\r\\n}\\r\\n#content{\\r\\n    padding-bottom: 5px;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"row\\\" id=\\\"myrow\\\"></div>\\n    <div class=\\\"row\\\" id=\\\"myform\\\">\\n\\t<div class=\\\"col \\\"></div>\\n    <div class=\\\"col-5 border border-dark rounded\\\" id=\\\"content\\\">\\n        <div class=\\\"row bg-dark text-white\\\" id=\\\"header\\\">\\n\\t\\t<div class=\\\"col \\\"></div>\\n\\t\\t<div class=\\\"col text-center\\\"><h2>SIGNUP</h2></div>\\n\\t\\t<div class=\\\"col\\\"></div>\\n\\t\\t</div>\\n    <form (ngSubmit)=\\\"onSubmit()\\\" #signupform=\\\"ngForm\\\">\\n                    <div class=\\\"form-group row\\\">\\n                        <label class=\\\"col-sm-3 col-form-label\\\" for=\\\"name\\\">NAME:</label>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-9\\\">\\n                        <input required class=\\\"form-control\\\" type=\\\"text\\\"  id=\\\"name\\\" [(ngModel)]=\\\"newuser.name\\\" name=\\\"name\\\" >\\n\\t\\t\\t\\t\\t\\t</div>\\n                    </div>\\n                    <div class=\\\"form-group row\\\">\\n                        <label class=\\\"col-sm-3 col-form-label\\\" for=\\\"email\\\">EMAIL ID:</label>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-9\\\">\\n                        <input required class=\\\"form-control\\\" name=\\\"email\\\" type=\\\"email\\\" id=\\\"email\\\" [(ngModel)]=\\\"newuser.email\\\">\\n\\t\\t\\t\\t\\t\\t</div>\\n                    </div>\\n\\n                    <div class=\\\"form-group row\\\">\\n                      <label class=\\\"col-sm-3 col-form-label\\\" for=\\\"password\\\">PASSWORD:</label>\\n          <div class=\\\"col-sm-9\\\">\\n                      <input class=\\\"form-control\\\" required name=\\\"password\\\" type=\\\"password\\\" id=\\\"password\\\" [(ngModel)]=\\\"newuser.password\\\">\\n          </div>\\n                  </div>\\n                  <div class=\\\"form-group row\\\">\\n                    <label class=\\\"col-sm-3 col-form-label\\\" for=\\\"college\\\">COLLEGE:</label>\\n        <div class=\\\"col-sm-9\\\">\\n                    <input class=\\\"form-control\\\" required name=\\\"college\\\" type=\\\"text\\\" id=\\\"college\\\" [(ngModel)]=\\\"newuser.college\\\">\\n        </div>\\n                </div>\\n                <div class=\\\"form-group row\\\">\\n                  <label class=\\\"col-sm-3 col-form-label\\\" for=\\\"address\\\">ADDRESS:</label>\\n      <div class=\\\"col-sm-9\\\">\\n                  <input class=\\\"form-control\\\" required name=\\\"address\\\" type=\\\"text\\\" id=\\\"address\\\" [(ngModel)]=\\\"newuser.address\\\">\\n      </div>\\n              </div>\\n              <div class=\\\"form-group row\\\">\\n                <label class=\\\"col-sm-3 col-form-label\\\" for=\\\"mobile\\\">MOBILE:</label>\\n    <div class=\\\"col-sm-9\\\">\\n                <input class=\\\"form-control\\\" required type=\\\"number\\\" name=\\\"mobile\\\" id=\\\"mobile\\\" [(ngModel)]=\\\"newuser.mobile\\\">\\n    </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n            <div class=\\\"col text-center\\\">\\n            <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" [disabled]=\\\"!signupform.form.valid\\\">Submit</button>\\n            </div>\\n            </div>\\n        </form>\\n\\t\\t</div>\\n         <div class=\\\"col\\\"></div>\\n    </div>\"","import { Component, OnInit } from '@angular/core';\nimport {UserserviceService} from '../userservice.service'\nimport { users } from '../user';\nimport {Router, ActivatedRoute} from '@angular/router';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n \n  newuser:users={\n    name:'',\n    email:'',\n    password:'',\n    college:'',\n    address:'',\n    mobile:null\n  };\n  constructor(private route: Router,private userservice: UserserviceService) { }\n\n  ngOnInit() {\n  }\nonSubmit()\n{\n  this.userservice.adduser(this.newuser)\n  alert(\"congrats new user created\");\n  this.route.navigate(['login']);\n}\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable,Subject } from 'rxjs';\nimport {users} from './user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserserviceService {\n\n  private navbarSource = new Subject<string>();\n  nav$ = this.navbarSource.asObservable();\n\n  constructor(private http:HttpClient) { \n  }\nactiveuser:users;\n\nadduser(value){\n this.http.post('/api/users', value).subscribe((data:users) => {\n  console.log(data);\n});\n}\n\nisvalid:boolean;\ngetuser(newuser){\nreturn this.http.post<users>(\"/api/users/getuser\",newuser)\n}\n\nsetActiveUser(value){\n  this.activeuser=value;\n  if(value!=null)\n  this.navbarSource.next('member');\n}\n\ngetActiveUser(){\n  return this.activeuser;\n}\n}","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WishlistService {\n\n  constructor(private http:HttpClient) { }\n\n  addtowishlist(value)\n  { \n    this.http.post('/api/wishlist', value).subscribe((data) => {\n      if(!data[1]){\n        alert(\"Book already in wishlist\")\n      }\n    });\n  }\n  getwishlist(value)\n  {\n   return this.http.post('/api/wishlist/getwishlist', value)\n  }\n  remove(value)\n  {\n    this.http.post('/api/wishlist/remove', value).subscribe((data) => {\n      console.log(data);\n    });\n  }\n}\n","module.exports = \"\"","module.exports = \"<table class=\\\"table table-striped table-borderless\\\">\\n  <thead>\\n    <tr class=\\\"table-active\\\">\\n      <th scope=\\\"col\\\"></th>\\n      <th scope=\\\"col\\\">Book Name</th>\\n      <th scope=\\\"col\\\">Author</th>\\n      <th scope=\\\"col\\\">Price</th>\\n    </tr>\\n  </thead>\\n  <tbody>\\n    <tr *ngFor=\\\"let data of mywishlist;let i = index\\\">\\n      <th scope=\\\"row\\\"><button class=\\\"btn btn-outline-danger\\\" (click)=\\\"remove(i)\\\"><i class=\\\"fas fa-trash-alt\\\"></i></button></th>\\n      <td>{{data.book.name}}</td>\\n      <td>{{data.book.author}}</td>\\n      <td>{{data.book.price}}</td>\\n    </tr>\\n  </tbody>\\n</table>\"","import { Component, OnInit } from '@angular/core';\nimport { WishlistService } from '../wishlist.service';\nimport {UserserviceService} from '../userservice.service';\n\n@Component({\n  selector: 'app-wishlist',\n  templateUrl: './wishlist.component.html',\n  styleUrls: ['./wishlist.component.css']\n})\nexport class WishlistComponent implements OnInit {\n\n  constructor(private userservice: UserserviceService,\n    private wishlist: WishlistService) { }\n mywishlist:any;\n  ngOnInit() {\n    if(this.userservice.getActiveUser()){\n    this.wishlist.getwishlist({userid:this.userservice.getActiveUser().id})\n    .subscribe(res=>{\n      this.mywishlist=res\n    })\n  }\n  else\n  alert(\"Please Login to Continue\")\n  }\n\n  remove(index)\n  {\n    this.wishlist.remove({userid:this.mywishlist[index].userId,bookid:this.mywishlist[index].bookId})\n    this.mywishlist.splice(index,1)\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}